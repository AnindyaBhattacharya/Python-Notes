Exception Handling -3
-----------------------

raise keyword. "raise" is used to create user defined exceptions. 

There are some Predefined exceptions are like Value Error, Type Error, Arithmetic Errors etc which are generated by the Python VM.

To create some user defined exception, to suit the business requirement we use "raise" keyword. Python VM is unware of any such exceptions. Programmer have to manually
create these exceptions using the raise key word.
Every  exception is a class, and that class is a child class of BaseException ( directly or indirectly)

Example -1
----------

# user defined exception,raise key word.

#how to declare an exception - 
#an user defined exception is simply a class and is the child class to the BaseException class, either directly or indirectly.

#declaring an user definded exception. 

class Low_Balance_Exception(Exception):   # declaring an exception named "Low_Balance_Exception" & making it a child class of Exception(child class of BaseException)
    def __init__(self,msg) :              # declaring a constructor, to print usr defined msg
        self.msg=msg                      # printing the msg
    
def withdraw(): 
    balance = 10000
    withdraw_req = int(input("Enter withdrawal amt " ))
    
    if withdraw_req > balance :
        raise Low_Balance_Exception(" Insuffucuent Amount ")       # raising the exception : Low_Balance_Exception, defined previously
    else :
        print("processing request, please collect money")
        
withdraw()

o/p- 

Enter withdrawal amt 12000
Traceback (most recent call last):
  File "Test1.py", line 21, in <module>
    withdraw()
  File "Test1.py", line 17, in withdraw
    raise Low_Balance_Exception(" Insuffucuent Amount ")            # exception rasies as amt withdraw is more than balance.



Example -2
-----------
class Low_Balance_Exception(Exception):   # declaring an exception named "Low_Balance_Exception" and making it a child class of Exception
    def __init__(self,msg) :              # declaring a constructor, to print usr defined msg
        self.msg=msg                      # printing the msg
    
def withdraw(): 
    balance = 10000
    transfer_amt = int(input("Enter amt to transfer " ))
    
    if transfer_amt > balance :
        raise Low_Balance_Exception(" Insuffucuent Amount ")       # raising the exception : Low_Balance_Exception, defined previously
    else :
        print("processing request, please wait")
        
try :
    withdraw()
except Low_Balance_Exception as a : 
    print("Can't process request due to - ",a)
else :
    print("Transfer completed")
finally:
    print("Redirecting to home page")

o/p- 
Enter amt to transfer 12569
Can't process request due to -   Insuffucuent Amount
Redirecting to home page

Example -3 Manually raising a Python predefined error forcefully ( ValueError is acting as an user defined error) : Not Recommended process
--------------------------------------------------------------------------------------------------------------------------------------------

def withdraw(): 
    balance = 10000
    transfer_amt = int(input("Enter amt to transfer " ))
    
    if transfer_amt > balance :
        raise ValueError(" Insuffucuent Amount ")       #manually raising the ValueError exception. 
        print("processing request, please wait")
withdraw()

o/p- 
Enter amt to transfer 5645498
Traceback (most recent call last):
  File "Test1.py", line 16, in <module>
    withdraw()
  File "Test1.py", line 14, in withdraw
    raise ValueError(" Insuffucuent Amount ")       	#manually raising the ValueError exception.
ValueError:  Insuffucuent Amount

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

check the video - https://www.youtube.com/watch?v=2S6sWAciCYc&list=PL8JLvOaoO7fOXm-LU2Ox7gw0TU3k-3cgS&index=10

check the video - https://www.youtube.com/watch?v=cOHzOjpXRhE @ 5:50:00

Detailed content to be written after going through the class concept.

