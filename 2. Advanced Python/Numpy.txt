#numpy tutorial
#numpy is used to create arrays

#Example -1 : creating an array from list. and displaing it's properties
------------------------------------------------------------------------
import numpy
my_list = [10,20,30,40]
array = numpy.array(my_list)

print(array)

print("array size is ",array.size)
print("array shape is ",array.shape , " and shape is always in a tuple")
print("array dimension is ",array.ndim)
print("array dataype is ",array.dtype)

o/p- 
[10 20 30 40]
array size is  4
array shape is  (4,) and shape is always in a tuple
array dimension is  1
array dataype is  int32


#Example -2 : creating an two-dimentional array from list. and displaing it's properties
----------------------------------------------------------------------------------------
import numpy
my_list = [[10,20],[30,40]]
array = numpy.array(my_list)

print(array)

print("array size is ",array.size)
print("array shape is ",array.shape , " and shape is always in a tuple")
print("array dimension is ",array.ndim)
print("array dataype is ",array.dtype)

o/p- 
[[10 20]
 [30 40]]
array size is  4
array shape is  (2, 2)  and shape is always in a tuple
array dimension is  2
array dataype is  int32

#Example -3 : fetching element values from 1D array
--------------------------------------------------
import numpy as np
my_list = [10,20,30]
array = np.array(my_list)

print(array)

for elements in array:
    print( "elements are " , elements)

[10 20 30]
elements are  10
elements are  20
elements are  30

#Example -4 : fetching element values from 2D array
#--------------------------------------------------
import numpy as np
my_list = [[10,20,30],[40,50,60],[70,80,90]]
array = np.array(my_list)

print(array)

for rows in array:
    print( "the elements in row ")
    for elements in rows:
        print(elements , end = " ")
    print()

o/p- 
[[10 20 30]
 [40 50 60]
 [70 80 90]]
the elements in row
10 20 30
the elements in row
40 50 60
the elements in row
70 80 90

#Example -5 : fetching element values from a certain rows to certain rows and certain column to certain columns
#---------------------------------------------------------------------------------------------------------------
import numpy as np
my_list = [[10,20,30],[40,50,60],[70,80,90]]
matrix = np.array(my_list)

print(matrix)

# general form :   matrix[from row values : to row value , from column value : to column value]

result = matrix[:,:] # prints full matrix
print("prints full matrix ")
print(result)

result = matrix[0:3,0:3] # prints full matrix
print("prints full matrix ")
print(result)

print("fetching elements from row 1 to row 2 and column 1 to column 2")

result = matrix[1:3,1:3] # prints selected matrix
print("prints matrix from range 1 to 2 row wise and colum wise")
print(result)
        
o/p-
[[10 20 30]
 [40 50 60]
 [70 80 90]]

prints full matrix
[[10 20 30]
 [40 50 60]
 [70 80 90]]

prints full matrix
[[10 20 30]
 [40 50 60]
 [70 80 90]]

fetching elements from row 1 to row 2 and column 1 to column 2

prints matrix from range 1 to 2 row wise and colum wise
[[50 60]
 [80 90]]


#Example -6 : creating a 1D array . Not from list
#------------------------------------------------
import numpy as np

cols = int(input ("enter the number of columns"))

array = np.ndarray(shape= cols, dtype = int)		#using ndarray careating a array object. arg passed is shape, dtype. default dtype is float

print("enter the elements ")

for i in range(cols):
    array[i]= int(input())

print("array generated is ",array)

o/p-
enter the number of columns6
enter the elements
5
6
7
8
9
10
array generated is  [ 5  6  7  8  9 10]

#Example -7 : creating a 1D array . Elements are string
#-------------------------------------------------------
import numpy as np

cols = int(input ("enter the number of columns"))

array = np.ndarray(shape= cols, dtype =object)

print("enter the elements ")

for i in range(cols):
    array[i]= int(input())

print("array generated is ")
print(array)

o/p-

enter the number of columns2
enter the elements
anindya
bhattacharya
array generated is
['anindya' 'bhattacharya']


#Example -8 : creating a 2D array .
#------------------------------------------------
import numpy as np

cols = int(input ("enter the number of columns"))
rows = int(input("enter the number of rows"))

array = np.ndarray(shape= (rows,cols), dtype =int)

print("enter {} elements for a {}X{} matrix " .format(rows*cols,rows,cols))

for i in range(rows):
    for j in range(cols): 
        array [i,j] =  int(input())

print("array generated is ")
print(array)


# 3 dimentional arrays . shape(i,j,k) i = no of 2D matrix, j = no. of rows in each matrix, k = no. of columns in each matrix
----------------------------------------------------------------------------------------------------------------------------

check graphical representation of 3D arrays in google

details matrix operation @ https://www.geeksforgeeks.org/multiplication-two-matrices-single-line-using-numpy-python/


# Multiplication (dot product , cross product)
